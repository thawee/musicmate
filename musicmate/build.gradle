import com.mikepenz.aboutlibraries.plugin.DuplicateMode
import com.mikepenz.aboutlibraries.plugin.DuplicateRule
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("com.mikepenz.aboutlibraries.plugin")
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "apincer.android.mmate"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 87
        versionName  "3.8.7"+ versions.buildDate
        //noinspection ChromeOsAbiSupport
        ndk.abiFilters 'arm64-v8a'
        multiDexEnabled true
		renderscriptTargetApi versions.compileSdk
		renderscriptSupportModeEnabled true
    }
    compileOptions {
        //coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // jetty12 required java 17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "17"
        }
    }

    ///dexOptions {
       // preDexLibraries = true
       /// jumboMode true
       /// javaMaxHeapSize "3g"
    ///}
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/library_release.kotlin_module', 'META-INF/library-core_release.kotlin_module', 'META-INF/LICENSE.md', 'META-INF/NOTICE.md', 'META-INF/AL2.0', 'META-INF/LGPL2.1','META-INF/INDEX.LIST','META-INF/io.netty.versions.properties']
            pickFirsts += ['META-INF/DEPENDENCIES']
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        abortOnError true
    }

    namespace 'apincer.android.mmate'
}
kapt {
    // required by epoxy
    correctErrorTypes = true
}

//project.android.buildTypes.all { buildType ->
//    buildType.javaCompileOptions.annotationProcessorOptions.arguments =
//            [
//                    validateEpoxyModelUsage     : "true",
//                    requireHashCodeInEpoxyModels: "true",
//                    requireAbstractEpoxyModels  : "true",
//                    implicitlyAddAutoModels     : "true",
//                    logEpoxyTimings     : "false",
//                   // enableParallelEpoxyProcessing     : "true",
//            ]
//}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://dl.bintray.com/tsubasap91/maven' }
    maven { url 'https://mvnrepository.com/artifact/'}
    maven { url 'https://repo1.maven.org/maven2/'}
   // maven { url 'http://dl.bintray.com/raphaelbussa/maven' }
}

dependencies {
    //  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    // android JDK is not complat with JDK, no java.util.ServiceLoader$Provider required by jetty12

    // AndroidX
    implementation deps.androidx.activity
    implementation deps.androidx.recyclerView
    implementation deps.androidx.recyclerView_selection
    implementation deps.androidx.coordinatorlayout
    implementation deps.androidx.appCompat
    implementation deps.androidx.cardView
    implementation deps.androidx.annotation
    implementation deps.androidx.lifecycle_runtime
    implementation deps.androidx.lifecycle_process
    implementation deps.androidx.palette
    implementation deps.androidx.preference
    implementation deps.androidx.documentFile
    implementation deps.androidx.work
    implementation deps.androidx.drawerlayout
    implementation deps.androidx.loader
    implementation deps.androidx.localbroadcastmanager
    implementation deps.androidx.drawerlayout

    implementation deps.jetbrains.annotations
    // room
    //implementation deps.androidx.room
    //annotationProcessor deps.androidx.room_compiler
    // To use Kotlin annotation processing tool (kapt)
    //kapt deps.androidx.room_compiler

    // OrmLite
    implementation deps.ormlite

    // google
    implementation deps.google.material
    implementation deps.filepicker

    implementation deps.jetbrains.annotations

    // epoxy
    //implementation deps.epoxy.runtime
    //kapt deps.epoxy.annotationProcessor

    // UI Libs
    //implementation deps.ui.groupie
    implementation deps.ui.powerspinner
    implementation deps.ui.powermenu
    implementation deps.ui.progressview
    implementation deps.ui.simplifyspan
    //implementation deps.ui.materialratingbar
    //implementation deps.ui.aspectRatioImageview //use for musicbrainz screen
    implementation deps.ui.fastscroll
    implementation deps.ui.elasticviews
    implementation deps.ui.stateViews
    implementation deps.ui.androidribbon
    implementation deps.ui.mpandroidchart
    implementation "com.androidplot:androidplot-core:1.5.11"
    //implementation 'com.github.giangpham96.expandable-text:expandable_textview:2.0.1'
    //implementation "com.github.skydoves:doublelift:1.0.4"
    implementation 'com.vanniktech:textbuilder:0.4.0'
    implementation 'com.github.sparrow007:carouselrecyclerview:1.2.6'
    //implementation deps.ui.datatables
    //https://github.com/DmitryMalkovich/circular-with-floating-action-button
    //implementation 'com.dmitrymalkovich.android:progress-fab:1.6'

    //https://github.com/pejman-74/ProgressFloatingActionButton
    //implementation 'com.github.pejman-74:ProgressFloatingActionButton:1.0'

    //https://github.com/getActivity/XXPermissions
    //implementation 'com.github.getActivity:XXPermissions:16.2'

    //https://github.com/Chrisvin/FlipTabs
    //implementation 'com.github.Chrisvin:FlipTabs:v1.5'
    implementation deps.ui.refresh_layout_kernel
    implementation deps.ui.refresh_header_classics

    implementation deps.ui.aboutlibraries
    //implementation deps.ui.toasty
  //  implementation deps.ui.shapeofview
    implementation deps.ui.photoview
    implementation deps.ui.alerter

    //others
    implementation deps.eventbus
    implementation deps.storage
    implementation deps.guava
    implementation deps.ffmpeg
    //implementation deps.coverartarchive

    //retrofit and json Librariess
    implementation deps.google.gson

    implementation deps.apache.commons_codec
    implementation deps.apache.commons_io
    implementation deps.apache.commons_logging
    implementation deps.apache.commons_lang3

    implementation deps.fasterxml.jackson_core
    implementation deps.fasterxml.jackson_databind

    implementation deps.kotlin.stdlib
    implementation deps.androidx.annotation
    implementation deps.jetbrains.annotations

    implementation deps.slf4j

    implementation deps.jupnp_android
    implementation deps.jupnp_support
    implementation deps.apache.httpcore
    implementation deps.apache.http2core
   // implementation deps.apache.httpclient
    implementation deps.okhttp3

    // Coil
    implementation deps.coil.runtime2
   // implementation deps.coil.transformations

    // Local Library
    //https://bitbucket.org/ijabz/jaudiotagger/src/master/
    implementation project(':library:justdsd')
    implementation project(':library:JustFLAC')
    implementation project(':library:library')
    implementation project(':library:androidtagview')
    implementation project(':library:jaudiotagger-android')
    debugImplementation project(':library:crashreporter')
   // implementation project(':library:MaterialEditText')
    implementation project(':library:mqaidentifier')
   // implementation project(':library:coroutines')
    implementation project(':library:objectrelations')
   // implementation project(':library:esoco-common')
   // implementation project(':library:esoco-monads')
}

configurations.implementation {
    exclude group: 'com.hazelcast', module: 'hazelcast'
   // exclude group: 'org.slf4j', module: 'slf4j-api'
   // exclude group: 'com.github.bumptech.glide', module: 'glide'
   // exclude group: 'io.coil-kt', module: 'coil-base'
   // exclude group: 'com.google.code.gson', module: 'gson'
}

aboutLibraries {
    // define the path configuration files are located in. E.g. additional libraries, licenses to add to the target .json
    configPath = "buildsystem"
    //excludeFields = ["licenses","funding"]

    // Enable the duplication mode, allows to merge, or link dependencies which relate
    duplicationMode = DuplicateMode.LINK
    // Configure the duplication rule, to match "duplicates" with
    duplicationRule = DuplicateRule.SIMPLE

    exclusionPatterns = [
            ~"org.jetbrains.*",
            ~"androidx.*",
            ~"androidx.activity*",
            ~"androidx.databinding*",
            ~"androidx.emoji2:emoji2-*",
            ~"androidx.lifecycle:lifecycle-*",
            ~"androidx.room*",
            ~"androidx.sqlite:sqlite*",
            ~"javax.validation:validation-api",
            ~"com.google.guava.*",
            ~"com.google.errorprone.*",
            ~"com.google.j2objc.*",
            ~"org.checkerframework.*",
            ~"org.greenrobot.*",
            ~"com.google.code.findbugs:jsr305",
            ~"com.fasterxml.jackson.*",
            ~"org.slf4j:slf4j-api",
            ~"org.jsoup:jsoup",
            ~"commons-io:commons-io",
            ~"commons-logging:commons-logging",
            ~"commons-codec:commons-codec",
           // ~"org.apache.*",
            ~"io.coil-kt:coil-base",
            ~"com.airbnb.android:epoxy-annotations",
            ~"io.objectbox:objectbox-kotlin",
            ~"io.objectbox:objectbox-java",
            ~"io.objectbox:objectbox-java-api",
            ~"com.mikepenz:aboutlibraries-core-android",
            ~"com.squareup.retrofit2:retrofit-mock",
            ~"org.reactivestreams:reactive-streams",
            ~"com.mikepenz:fastadapter",
            ~"com.squareup.okio:okio-jvm",
            ~"com.arthenica:smart-exception-common",
            ~"com.arthenica:smart-exception-java",
            ~"com.squareup.retrofit2:converter-gson",
            ~"io.github.scwang90:refresh-header-classics",
            ~"io.github.scwang90:refresh-footer-classics",
            ~"io.github.scwang90:refresh-drawable-paint",
            ~"com.afollestad.*",
            ~"com.github.bumptech.*",
            ~"com.arthenica:*",
            ~"io.netty:netty-buffer",
            ~"io.netty:netty-codec",
            ~"io.netty:netty-common",
            ~"io.netty:netty-handler",
            ~"io.netty:netty-resolver",
            ~"io.netty:netty-transport",
            ~"io.netty:netty-transport-native-unix-common",
            ~"org.jupnp:org.jupnp.support"
    ]
}

