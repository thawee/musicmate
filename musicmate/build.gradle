/*
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("com.mikepenz.aboutlibraries.plugin")
   // id("io.objectbox")
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "apincer.android.mmate"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 71
        versionName  "3.7.1"+ versions.buildDate
        ndk.abiFilters 'arm64-v8a'
        multiDexEnabled true
		renderscriptTargetApi versions.compileSdk
		renderscriptSupportModeEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    ///dexOptions {
       // preDexLibraries = true
       /// jumboMode true
       /// javaMaxHeapSize "3g"
    ///}
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/library_release.kotlin_module', 'META-INF/library-core_release.kotlin_module']
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        abortOnError true
    }
    namespace 'apincer.android.mmate'
}
kapt {
    // required by epoxy
    correctErrorTypes = true
}

//project.android.buildTypes.all { buildType ->
//    buildType.javaCompileOptions.annotationProcessorOptions.arguments =
//            [
//                    validateEpoxyModelUsage     : "true",
//                    requireHashCodeInEpoxyModels: "true",
//                    requireAbstractEpoxyModels  : "true",
//                    implicitlyAddAutoModels     : "true",
//                    logEpoxyTimings     : "false",
//                   // enableParallelEpoxyProcessing     : "true",
//            ]
//}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://dl.bintray.com/tsubasap91/maven' }
   // maven { url 'http://dl.bintray.com/raphaelbussa/maven' }
}

dependencies { 
    // AndroidX
    implementation deps.androidx.activity
    implementation deps.androidx.recyclerView
    implementation deps.androidx.recyclerView_selection
    implementation deps.androidx.appCompat
    implementation deps.androidx.cardView
    implementation deps.androidx.annotation
    implementation deps.androidx.lifecycle_runtime
    implementation deps.androidx.lifecycle_process
    implementation deps.androidx.palette
    implementation deps.androidx.preference
    implementation deps.androidx.documentFile
    implementation deps.androidx.work

    // room
    //implementation deps.androidx.room
    //annotationProcessor deps.androidx.room_compiler
    // To use Kotlin annotation processing tool (kapt)
    //kapt deps.androidx.room_compiler

    // OrmLite
    implementation deps.ormlite

    // google
    implementation deps.google.material

    // RxAndroid & Coroutine
    //implementation deps.rxjava3_rxandroid
    //implementation deps.rxjava3
    //implementation deps.coroutines  // cannot use coz cannot resolve dependency
    //implementation deps.objectrelations
    //implementation deps.esococommon;

    // epoxy
    //implementation deps.epoxy.runtime
    //kapt deps.epoxy.annotationProcessor

    // UI Libs
    //implementation deps.ui.groupie
    implementation deps.ui.powerspinner
    implementation deps.ui.powermenu
    implementation deps.ui.progressview
    implementation deps.ui.simplifyspan
    //implementation deps.ui.materialratingbar
    //implementation deps.ui.aspectRatioImageview //use for musicbrainz screen
    implementation deps.ui.fastscroll
    implementation deps.ui.elasticviews
    implementation deps.ui.stateViews
    implementation deps.ui.androidribbon
    implementation deps.ui.mpandroidchart
    //implementation deps.ui.datatables
    //https://github.com/DmitryMalkovich/circular-with-floating-action-button
    //implementation 'com.dmitrymalkovich.android:progress-fab:1.6'

    //https://github.com/pejman-74/ProgressFloatingActionButton
    //implementation 'com.github.pejman-74:ProgressFloatingActionButton:1.0'

    //https://github.com/getActivity/XXPermissions
    //implementation 'com.github.getActivity:XXPermissions:16.2'

    //https://github.com/Chrisvin/FlipTabs
    //implementation 'com.github.Chrisvin:FlipTabs:v1.5'
    implementation deps.ui.refresh_layout_kernel
    implementation deps.ui.refresh_header_classics

    implementation deps.ui.aboutlibraries
    //implementation deps.ui.toasty
    implementation deps.ui.shapeofview
    implementation deps.ui.photoview
    implementation deps.ui.alerter
    implementation deps.ui.htmleditor

    //others
   // implementation deps.dexter
    implementation deps.eventbus
    implementation deps.storage
   // implementation deps.timber
    implementation deps.guava
    implementation deps.ffmpeg
    implementation deps.coverartarchive
   // implementation deps.essentials

    //retrofit and json Librariess
    implementation deps.google.gson
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson

    // Glide (Image Loader & Caching)
   // implementation deps.glide.runtime
   // annotationProcessor deps.glide.compiler

    // Coil
    implementation deps.coil.runtime2
   // implementation "com.github.Commit451.coil-transformations:transformations:1.1.2"
    //implementation "com.github.Commit451.coil-transformations:transformations-gpu:1.1.2"
  //  implementation('de.esoco:coroutines:0.9.1')

    // Logging and Debugging
   // implementation deps.timber
   // debugImplementation deps.crashreporter
    // add leakcanary to debug implementation will enable leak detection. no other action required
   // debugImplementation deps.leakcanary
   // implementation deps.blockcanary_no_op
  //  implementation deps.blockcanary
   // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // implementation 'com.sensorberg.libs:permission-bitte:2.0.0'

    // Local Library
    //https://bitbucket.org/ijabz/jaudiotagger/src/master/
    //implementation project(':library:jaudiotagger')
    implementation project(':library:justdsd')
    implementation project(':library:JustFLAC')
    implementation project(':library:library')
    implementation project(':library:androidtagview')
    debugImplementation project(':library:crashreporter')
    implementation project(':library:MaterialEditText')
    implementation project(':library:mqaidentifier')
   // implementation project(':library:coroutines')
    implementation project(':library:objectrelations')
   // implementation project(':library:esoco-common')
   // implementation project(':library:esoco-monads')
}

aboutLibraries {
    // define the path configuration files are located in. E.g. additional libraries, licenses to add to the target .json
    configPath = "buildsystem"
    //excludeFields = ["licenses","funding"]

    // Enable the duplication mode, allows to merge, or link dependencies which relate
    duplicationMode = com.mikepenz.aboutlibraries.plugin.DuplicateMode.LINK
    // Configure the duplication rule, to match "duplicates" with
    duplicationRule = com.mikepenz.aboutlibraries.plugin.DuplicateRule.SIMPLE

    exclusionPatterns = [
            ~"org.jetbrains.*",
            ~"androidx.*",
            ~"androidx.activity*",
            ~"androidx.databinding*",
            ~"androidx.emoji2:emoji2-*",
            ~"androidx.lifecycle:lifecycle-*",
            ~"androidx.room*",
            ~"androidx.sqlite:sqlite*",
            ~"javax.validation:validation-api",
            ~"com.google.guava.*",
            ~"com.google.errorprone.*",
            ~"com.google.j2objc.*",
            ~"org.checkerframework.*",
            ~"com.arthenica.*",
            ~"org.greenrobot.*",
            ~"com.google.code.findbugs:jsr305",
            ~"com.fasterxml.jackson.*",
            ~"org.slf4j:slf4j-api",
            ~"org.jsoup:jsoup",
            ~"commons-io:commons-io",
            ~"commons-logging:commons-logging",
            ~"commons-codec:commons-codec",
            ~"org.apache.*",
            ~"io.coil-kt:coil-base",
            ~"com.airbnb.android:epoxy-annotations",
            ~"io.objectbox:objectbox-kotlin",
            ~"io.objectbox:objectbox-java",
            ~"io.objectbox:objectbox-java-api",
            ~"com.mikepenz:aboutlibraries-core-android",
            ~"com.squareup.retrofit2:retrofit-mock",
            ~"org.reactivestreams:reactive-streams",
            ~"com.mikepenz:fastadapter",
            ~"com.squareup.okio:okio",
            ~"com.squareup.okhttp3:okhttp",
            ~"com.squareup.retrofit2:converter-gson",
            ~"io.github.scwang90:refresh-header-classics",
            ~"io.github.scwang90:refresh-footer-classics",
            ~"io.github.scwang90:refresh-drawable-paint",
            ~"com.afollestad.*",
            ~"com.github.bumptech.*"
    ]
}

